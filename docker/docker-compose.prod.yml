# Production configuration for docker-compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  postgres:
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - cm_postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    command: >
      postgres 
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200

  redis:
    restart: always
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000

  minio:
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - cm_minio_data:/data
      - ./ssl:/root/.minio/certs

  api:
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: https://+:443;http://+:80
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/https:ro
      - ./logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  client:
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./ssl:/etc/ssl/certs:ro
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  cm_postgres_data:
    driver: local
  cm_redis_data:
    driver: local  
  cm_minio_data:
    driver: local

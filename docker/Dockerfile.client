# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy solution file
COPY ClubManagement.sln ./

# Copy project files
COPY src/Shared/ClubManagement.Shared/ClubManagement.Shared.csproj src/Shared/ClubManagement.Shared/
COPY src/Client/ClubManagement.Client/ClubManagement.Client.csproj src/Client/ClubManagement.Client/

# Restore dependencies
RUN dotnet restore src/Client/ClubManagement.Client/ClubManagement.Client.csproj

# Copy source code
COPY src/ src/

# Build and publish
WORKDIR /src/src/Client/ClubManagement.Client
RUN dotnet publish -c Release -o /app/publish /p:UseAppHost=false

# Runtime stage (using nginx to serve static files)
FROM nginx:alpine AS runtime

# Copy custom nginx config
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Copy published app to nginx web directory
COPY --from=build /app/publish/wwwroot /usr/share/nginx/html

# Copy app settings for different environments
COPY --from=build /app/publish/wwwroot/appsettings.json /usr/share/nginx/html/
COPY --from=build /app/publish/wwwroot/_framework /usr/share/nginx/html/_framework

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]